import json
from typing import TypedDict
import pytest
from src.services import search_individual_transfers

Transaction = TypedDict(
    "Transaction",
    {
        "Дата операции": str,
        "Дата платежа": str,
        "Номер карты": str,
        "Статус": str,
        "Сумма операции": float,
        "Валюта операции": str,
        "Сумма платежа": float,
        "Валюта платежа": str,
        "Кэшбэк": float,
        "Категория": str,
        "MCC": int,
        "Описание": str,
        "Бонусы (включая кэшбэк)": float,
        "Округление на инвесткопилку": float,
        "Сумма операции с округлением": float,
    },
)


@pytest.mark.parametrize(
    "transactions, result",
    [
        (
            [
                {
                    "Дата операции": "31.12.2021 00:12:53",
                    "Дата платежа": "31.12.2021",
                    "Номер карты": "",
                    "Статус": "OK",
                    "Сумма операции": -800.0,
                    "Валюта операции": "RUB",
                    "Сумма платежа": -800.0,
                    "Валюта платежа": "RUB",
                    "Кэшбэк": 0.0,
                    "Категория": "Переводы",
                    "MCC": 0,
                    "Описание": "Константин Л.",
                    "Бонусы (включая кэшбэк)": 0,
                    "Округление на инвесткопилку": 0,
                    "Сумма операции с округлением": 800.0,
                },
                {
                    "Дата операции": "31.12.2021 00:12:54",
                    "Дата платежа": "31.12.2021",
                    "Номер карты": "",
                    "Статус": "FAILED",
                    "Сумма операции": -800.0,
                    "Валюта операции": "RUB",
                    "Сумма платежа": -800.0,
                    "Валюта платежа": "RUB",
                    "Кэшбэк": 0.0,
                    "Категория": "Переводы",
                    "MCC": 0,
                    "Описание": "Константин Л.",
                    "Бонусы (включая кэшбэк)": 0,
                    "Округление на инвесткопилку": 0,
                    "Сумма операции с округлением": 800.0,
                },
                {
                    "Дата операции": "31.12.2021 00:12:55",
                    "Дата платежа": "31.12.2021",
                    "Номер карты": "",
                    "Статус": "OK",
                    "Сумма операции": 800.0,
                    "Валюта операции": "RUB",
                    "Сумма платежа": 800.0,
                    "Валюта платежа": "RUB",
                    "Кэшбэк": 0.0,
                    "Категория": "Переводы",
                    "MCC": 0,
                    "Описание": "Константин Л.",
                    "Бонусы (включая кэшбэк)": 0,
                    "Округление на инвесткопилку": 0,
                    "Сумма операции с округлением": 800.0,
                },
                {
                    "Дата операции": "31.12.2021 00:12:56",
                    "Дата платежа": "31.12.2021",
                    "Номер карты": "",
                    "Статус": "OK",
                    "Сумма операции": -800.0,
                    "Валюта операции": "RUB",
                    "Сумма платежа": -800.0,
                    "Валюта платежа": "RUB",
                    "Кэшбэк": 0.0,
                    "Категория": "Оплата",
                    "MCC": 0,
                    "Описание": "Константин Л.",
                    "Бонусы (включая кэшбэк)": 0,
                    "Округление на инвесткопилку": 0,
                    "Сумма операции с округлением": 800.0,
                },
                {
                    "Дата операции": "31.12.2021 00:12:57",
                    "Дата платежа": "31.12.2021",
                    "Номер карты": "",
                    "Статус": "OK",
                    "Сумма операции": -800.0,
                    "Валюта операции": "RUB",
                    "Сумма платежа": -800.0,
                    "Валюта платежа": "RUB",
                    "Кэшбэк": 0.0,
                    "Категория": "Переводы",
                    "MCC": 0,
                    "Описание": "Константин Ли",
                    "Бонусы (включая кэшбэк)": 0,
                    "Округление на инвесткопилку": 0,
                    "Сумма операции с округлением": 800.0,
                },
            ],
            [
                {
                    "Дата операции": "31.12.2021 00:12:53",
                    "Дата платежа": "31.12.2021",
                    "Номер карты": "",
                    "Статус": "OK",
                    "Сумма операции": -800.0,
                    "Валюта операции": "RUB",
                    "Сумма платежа": -800.0,
                    "Валюта платежа": "RUB",
                    "Кэшбэк": 0.0,
                    "Категория": "Переводы",
                    "MCC": 0,
                    "Описание": "Константин Л.",
                    "Бонусы (включая кэшбэк)": 0,
                    "Округление на инвесткопилку": 0,
                    "Сумма операции с округлением": 800.0,
                }
            ],
        ),
    ],
)
def test_search_individual_transfers(
    transactions: list[Transaction], result: list[Transaction]
) -> None:
    """тест функции search_individual_transfers"""

    transactions_str = search_individual_transfers(transactions)
    transactions = json.loads(transactions_str)

    assert transactions == result


def test_search_individual_transfers_empty_data() -> None:
    """тест excel файла"""

    transactions: list[Transaction] = list()
    transactions_str = search_individual_transfers(transactions)
    assert transactions_str == ""


@pytest.mark.parametrize(
    "transactions",
    [
        [
            {
                "Дата операции": "31.12.2021 00:12:54",
                "Дата платежа": "31.12.2021",
                "Номер карты": "",
                "Статус": "FAILED",
                "Сумма операции": -800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0.0,
                "Категория": "Переводы",
                "MCC": 0,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
            {
                "Дата операции": "31.12.2021 00:12:55",
                "Дата платежа": "31.12.2021",
                "Номер карты": "",
                "Статус": "OK",
                "Сумма операции": 800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": 800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0.0,
                "Категория": "Переводы",
                "MCC": 0,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
            {
                "Дата операции": "31.12.2021 00:12:57",
                "Дата платежа": "31.12.2021",
                "Номер карты": "",
                "Статус": "OK",
                "Сумма операции": -800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0.0,
                "Категория": "Переводы",
                "MCC": 0,
                "Описание": "Константин Ли",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
            {
                "Дата операции": "31.12.2021 00:12:56",
                "Дата платежа": "31.12.2021",
                "Номер карты": "",
                "Статус": "OK",
                "Сумма операции": -800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": 0.0,
                "Категория": "Оплата",
                "MCC": 0,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
        ],
    ],
)
def test_search_individual_transfers_empty_filtered(
    transactions: list[Transaction],
) -> None:
    """тест данных после фильтра"""

    transactions_str = search_individual_transfers(transactions)
    assert transactions_str == ""


@pytest.mark.parametrize(
    "transactions",
    [
        [
            {"Дата платежа": "31.12.2021"},
            {"Статус": "OK", "Категория": "Переводы", "Сумма платежа": -800.0},
        ],
    ],
)
def test_search_individual_transfers_key_error(transactions: list[Transaction]) -> None:
    """тест ошибки ключа"""

    transactions_str = search_individual_transfers(transactions)
    assert transactions_str == ""
